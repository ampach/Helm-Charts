# This is a SecretProviderClass example using system-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-system-msi
  namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-name: "cluster-init"    
    meta.helm.sh/release-namespace: "kube-system"
spec:
  provider: azure
  secretObjects: # Create a Kubernetes Secret
    - secretName: "sitecore-security"
      type: Opaque
      data:
        - objectName: "cloudflare"
          key: "cloudflare-api-token"
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "false"    # Set to true for using managed identity
    clientID: {{ .Values.keyvault.clientID }}      # If empty, then defaults to use the system assigned identity on the VM
    keyvaultName: {{ .Values.keyvault.keyvaultName }}
    cloudName: "AzurePublicCloud"                   # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: cloudflare-api-token-secret
          objectType: secret
          
    tenantId: {{ .Values.keyvault.tenantId }}          # The tenant ID of the key vault